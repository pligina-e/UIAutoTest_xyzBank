package pages;

import io.qameta.allure.Step;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.support.FindBy;
import org.openqa.selenium.support.ui.Select;

import java.util.Random;

import static helpers.Wait.*;

/**
 * Класс для работы с формой авторизации клиента (Четвертый тест-кейс)
 * @see BasePage
 */
public class AuthorizationPage extends BasePage {
    @FindBy(xpath = "//*[@ng-class='btnClass2']")
    WebElement openAccountButton;
    @FindBy(xpath = "//*[@id='userSelect']") // //select[@name='userSelect']
    WebElement userSelect;
    @FindBy(xpath = "//*[@id='currency']")
    WebElement currencySelect;
    @FindBy(xpath = "//*[@type='submit']")
    WebElement submitButton;

    public AuthorizationPage(final WebDriver webDriver) {
        super(webDriver);
    }

    public AuthorizationPage pressButton() {
        waitThenClick(driver, openAccountButton);
        return this;
    }

    /**
     * Метод для выбора пользователя и валюты с помощью выпадающего списка, а после - нажатие на кнопку "Process"
     */
    @Step("Select customer and currency, then submit")
    public AuthorizationPage selectDataAndSubmit() {
        Random random = new Random();
        waitUntilVisibleElement(driver, userSelect);
        Select selectUser = new Select(userSelect);
        waitUntilVisibleElement(driver, currencySelect);
        Select selectCurrency = new Select(currencySelect);
        selectUser.selectByIndex(random.nextInt(5) + 1);
        selectCurrency.selectByIndex(random.nextInt(3) + 1);
        waitThenClick(driver, submitButton);
        return this;
    }
}
